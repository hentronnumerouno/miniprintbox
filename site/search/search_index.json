{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>All-in-one solution for monitoring 3d prints on a budget. Leverage the power of Obico for print monitoring and Octoprint for printer control in a self-hosted environment. Designed to be deployed on low-cost thin-clients that can often be found used for &lt;$50.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Obico<ul> <li>Print monitoring and failure detection.</li> </ul> </li> <li>Octoprint<ul> <li>Printer control and integration with Obico.</li> </ul> </li> <li>Netdata<ul> <li>System Monitoring Software</li> </ul> </li> <li>Homer<ul> <li>Dashboard for all of the apps!</li> </ul> </li> </ul>"},{"location":"#notification-support","title":"Notification Support","text":"<p>Octoprint Supported via Octoslack</p> <pre><code>- Slack\n- Pushbullet\n- Pushover\n- Rocket.Chat\n- Matrix\n- Discord\n- Microsoft Teams\n</code></pre> <p>Obico Supported Natively:</p> <pre><code>- Email\n- SMS\n- Pushbullet\n- Discord\n- Telegram\n- Pushover\n- Slack\n</code></pre>"},{"location":"#optional-features-for-remote-access-future-features","title":"Optional Features for Remote Access (Future Features)","text":"<ul> <li>Twingate</li> <li>Cloudflare Tunnels</li> <li>Netmaker</li> </ul>"},{"location":"#future-features","title":"Future Features:","text":"<ul> <li>Daily backup and restore functionality</li> <li>Container management gui</li> </ul>"},{"location":"Configuration/","title":"Configuration","text":"<p>Once the Ansible script has completed, the Homer Dashboard will serve the information for each service.</p> <p>Homer Dashboard Preview: </p>"},{"location":"Configuration/#octoprint-setup","title":"Octoprint Setup:","text":""},{"location":"Configuration/#octoprint-login-credentials","title":"Octoprint Login Credentials","text":"<ul> <li>username: admin</li> <li>password: password</li> </ul> <p>Once logged in the printer and general config parameters can be modified. </p>"},{"location":"Configuration/#obico-setup","title":"Obico Setup:","text":""},{"location":"Configuration/#obico-login-credentials","title":"Obico Login Credentials","text":"<ul> <li>username/email: admin@example.com</li> <li>password: password</li> </ul>"},{"location":"Installation/","title":"Installation","text":"<p>Tested on Ubuntu 22.04, other versions may work as well.</p> <p>Warning</p> <p>Always ensure that important data is backed up before executing this script.</p>"},{"location":"Installation/#clone-git-repo","title":"Clone Git Repo:","text":"<pre><code>git clone https://github.com/hentronnumerouno/miniprintbox.git \n</code></pre>"},{"location":"Installation/#change-ip-address-to-that-of-target-machine","title":"Change IP address to that of target machine","text":"<pre><code>nano ~/miniprintbox/install/inventory.yml\n</code></pre>"},{"location":"Installation/#note-this-script-can-be-deployed-on-the-local-pc","title":"Note: This script can be deployed on the local pc.","text":"<ul> <li>If wanted, uncomment this line in the inventory.yml files (one file in the 'install' directory and another in the 'remove' directory) <code>#127.0.0.1 ansible_connection=local</code></li> </ul> <p>Begin Installation:</p> <p><pre><code>cd install\n./install.sh\n</code></pre> Once the installation is completed, the script will display the overview of the tasks, including the time it took to complete.</p> <p>Actual build time may vary depending on system specs.</p> <ul> <li>System Type: Virtualized (Proxmox VE 7.4-16)</li> <li>OS Version: Ubuntu 22.04 Cloud Image</li> <li>Link Speed: 1 GB Symmetrical</li> <li>Disk: 60 GB (bare minimum of 10 GBs needed for install)</li> <li>CPU Cores: 6</li> <li>Memory: 6 GB</li> </ul> <p></p>"},{"location":"Installation/#congrats-install-is-now-complete-you-can-now-configure-your-setup","title":"Congrats, install is now complete! You can now configure your setup","text":""},{"location":"Troubleshooting/","title":"Troubleshooting","text":""},{"location":"Troubleshooting/#because-sometimes-it-just-doesnt-work","title":"Because sometimes it just doesn't work...","text":"<p>Please note that these are the failures modes discovered during testing and are by no means exclusive to the failures that may arise during use. Please open a pull request with the issues and issue description so it can be added to the troubleshooting documentation. https://github.com/hentronnumerouno/miniprintbox/pulls</p>"},{"location":"Troubleshooting/#failure-modes","title":"Failure Modes:","text":""},{"location":"Troubleshooting/#no-image-in-octoprint-or-obico","title":"No image in Octoprint or Obico?","text":"<ul> <li>Cause 1:<ul> <li>Not all browsers support Avahi for network resolution of .local domains</li> </ul> </li> <li>Fix 1:<ul> <li>Change browser to Firefox</li> </ul> </li> <li>Cause 2: <ul> <li>Check to see if miniprintbox.local is resolvable on the local network.</li> </ul> </li> <li>Fix 2:<ul> <li>Open a terminal or windows command prompt and ping miniprintbox.local.</li> </ul> </li> </ul>"},{"location":"Troubleshooting/#octoprint-reset-to-defaults","title":"Octoprint reset to defaults?","text":"<ul> <li>Cause 1:<ul> <li>Can occur when the \"rebuild-octoprint.sh\" script is run outside of the ansible-playbook</li> </ul> </li> <li>Fix 1: <ul> <li>Find running containers using <code>docker ps</code> or <code>sudo docker ps</code> depending on privileges.</li> <li>Stop the Octoprint docker container with <code>docker stop octoprint_octoprint_1</code></li> <li>Delete the running Ocotoprint container with <code>docker rm octoprint_octoprint_1</code></li> <li>Delete the 3rd octoprint folder that will be created in this path: <code>user@test-os:~/Documents/miniprintbox/install/octoprint/octoprint/octoprint</code></li> <li>Change the current directory to <code>wherever_you_cloned_the_repo/miniprintbox/install/octoprint</code></li> <li>Rebuild the container <code>docker-compose up -d --force-recreate</code></li> </ul> </li> <li>Cause 2:<ul> <li>Breaking change from Octoprint update</li> </ul> </li> <li>Fix 2: <ul> <li>Confirm that the docker image used for Octoprint is <code>octoprint/octoprint@sha256:f50ab403cec9979562b0a9da31167d36d653dad1b9271589603e44caf42517f0</code>.</li> </ul> </li> </ul>"},{"location":"Uninstallation/","title":"Uninstallation","text":"<p>Tested on Ubuntu 22.04, other versions may work as well.</p> <p>Warning</p> <p>Always ensure that important data is backed up before executing this script.</p> <p>Clone Git Repo:</p> <pre><code>git clone https://github.com/hentronnumerouno/miniprintbox.git \n</code></pre> <p>Begin Uninstallation:</p> <p><pre><code>cd remove\n./remove.sh\n</code></pre> Once the uninstallation script is completed, your system should be returned to normal (note: this script is still in development so there may be some hanging packages remaining)</p> <p>Actual build time may vary depending on system specs.</p> <ul> <li>System Type: Virtualized (Proxmox VE 7.4-16)</li> <li>OS Version: Ubuntu 22.04 Cloud Image</li> <li>Link Speed: 1 GB Symmetrical</li> <li>Disk: 60 GB (bare minimum of 10 GBs needed for install)</li> <li>CPU Cores: 6</li> <li>Memory: 6 GB</li> </ul> <p></p>"},{"location":"Uninstallation/#congrats-uninstall-is-now-complete-your-system-should-now-be-restored-to-the-way-it-was-before-install-commenced","title":"Congrats, Uninstall is now complete! Your system should now be restored to the way it was before install commenced.","text":""}]}